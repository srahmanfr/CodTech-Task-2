import socket
import requests
from typing import List

def scan_ports(ip: str, ports: List[int]):
    """
    Scan a list of ports on a given IP address.

    Parameters:
    ip (str): IP address of the target.
    ports (List[int]): List of ports to scan.

    Returns:
    dict: Dictionary of ports with their status (open/closed).
    """
    results = {}
    for port in ports:
        try:
            with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
                s.settimeout(1)
                result = s.connect_ex((ip, port))
                results[port] = "Open" if result == 0 else "Closed"
        except Exception as e:
            results[port] = f"Error: {e}"
    return results

def check_software_version(url: str):
    """
    Check for server software version from HTTP headers.

    Parameters:
    url (str): URL of the website to check.

    Returns:
    str: Server software version if available.
    """
    try:
        response = requests.get(url, timeout=5)
        server = response.headers.get('Server', 'Unknown')
        return f"Server software: {server}"
    except Exception as e:
        return f"Error fetching software version: {e}"

def check_misconfigurations(ip: str):
    """
    Perform basic checks for common misconfigurations.

    Parameters:
    ip (str): IP address of the target.

    Returns:
    List[str]: List of detected misconfigurations.
    """
    misconfigurations = []

    # Example check: Default HTTP/HTTPS ports
    ports_to_check = {80: "HTTP", 443: "HTTPS"}
    port_status = scan_ports(ip, list(ports_to_check.keys()))

    for port, protocol in ports_to_check.items():
        if port_status.get(port) == "Open":
            misconfigurations.append(f"Default {protocol} port ({port}) is open.")

    return misconfigurations

# Example usage
if __name__ == "__main__":
    target_ip = input("Enter the IP address to scan: ")
    target_url = input("Enter the website URL to check software version (include http/https): ")

    print("\n--- Port Scan Results ---")
    ports_to_scan = [22, 80, 443, 8080]  # Common ports
    port_results = scan_ports(target_ip, ports_to_scan)
    for port, status in port_results.items():
        print(f"Port {port}: {status}")

    print("\n--- Software Version Check ---")
    print(check_software_version(target_url))

    print("\n--- Misconfigurations Detected ---")
    misconfigurations = check_misconfigurations(target_ip)
    if misconfigurations:
        for issue in misconfigurations:
            print(issue)
    else:
        print("No common misconfigurations detected.")
